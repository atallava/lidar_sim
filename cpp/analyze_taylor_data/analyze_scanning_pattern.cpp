#include <iostream>
#include <iomanip>
#include <tuple>
#include <ctime>

#include <lidar_sim/SectionLoader.h>
#include <lidar_sim/RayDirnServer.h>
#include <lidar_sim/PoseServer.h>
#include <lidar_sim/ModelingUtils.h>
#include <lidar_sim/LaserCalibParams.h>
#include <lidar_sim/LaserUtils.h>
#include <lidar_sim/VizUtils.h>

using namespace lidar_sim;

std::string genRelPathSection(int section_id)
{
    std::ostringstream ss;
    ss << "data/sections/section_" << std::setw(2) << std::setfill('0') << section_id 
       << "/section_" << std::setw(2) << std::setfill('0') << section_id 
       << "_world_frame_subsampled.xyz";

    return ss.str();
}

int main(int argc, char **argv)
{
    clock_t start_time = clock();

    // todo: unhack us
    // // load section
    // int section_sim_id = 3;
    // std::string rel_path_section = genRelPathSection(section_sim_id);
    // SectionLoader section(rel_path_section);

    // // pose server
    // std::string rel_path_poses_log = "../data/taylorJune2014/Pose/PoseAndEncoder_1797_0000254902_wgs84_wgs84.fixed";
    // PoseServer imu_pose_server(rel_path_poses_log);

    // // laser calib
    // LaserCalibParams laser_calib_params;

    // size_t packet_idx = 0;

    // // pose, ray origin
    // double t = section.m_packet_timestamps[packet_idx];
    // std::vector<double> imu_pose = imu_pose_server.getPoseAtTime(t);

    // std::vector<double> ray_origin = laserPosnFromImuPose(imu_pose, laser_calib_params);
    // // packet pts
    // std::vector<std::vector<double> > packet_pts = section.getPtsAtTime(t);

    std::vector<double> ray_origin{0, 0, 0};
    std::vector<std::vector<double> > packet_pts{
	{1.1061,-1.83,-1.2681},
	{2.0275,-3.3543,-0.6439},
	{1.1085,-1.8339,-1.204},
	{2.0213,-3.3442,-0.5492},
	{1.0523,-1.741,-1.0817},
	{3.2882,-5.4402,-0.7434},
	{1.1676,-1.9318,-1.1338},
	{2.9285,-4.8451,-0.5282},
	{1.2025,-1.9895,-1.1004},
	{1.6636,-2.7524,-0.2249},
	{1.2012,-1.9874,-1.0339},
	{4.9781,-8.236,-0.4488},
	{3.5765,-5.9172,-0.1605},
	{1.3241,-2.1907,-0.9996},
	{3.6541,-6.0455,0},
	{1.0995,-1.8191,-0.7736},
	{2.8339,-4.6886,0.1272},
	{2.1749,-3.5982,-1.4207},
	{3.0331,-5.0182,0.2734},
	{1.1012,-1.8218,-0.6643},
	{2.9681,-4.9107,0.4012},
	{1.9426,-3.214,-0.9831},
	{1.9006,-3.1445,-0.8706},
	{3.2917,-5.446,0.8943},
	{1.9541,-3.2329,-0.803},
	{3.227,-5.3389,1.0249},
	{1.1006,-1.8332,-1.2681},
	{2.0033,-3.3366,-0.6394},
	{1.1156,-1.8582,-1.2177},
	{2.0246,-3.3722,-0.5528},
	{1.0562,-1.7593,-1.0911},
	{2.0266,-3.3755,-0.4604},
	{1.1168,-1.8602,-1.0898},
	{2.8403,-4.7309,-0.5148},
	{1.1948,-1.99,-1.0987},
	{1.6401,-2.7317,-0.2228},
	{1.1963,-1.9925,-1.0347},
	{3.264,-5.4365,-0.2957},
	{1.2634,-2.1043,-1.0252},
	{1.9215,-3.2005,-0.0867},
	{1.2936,-2.1547,-0.9814},
	{3.5661,-5.9397,0},
	{1.097,-1.8272,-0.7757},
	{2.7902,-4.6473,0.1258},
	{2.2052,-3.6729,-1.4476},
	{2.9977,-4.9929,0.2716},
	{1.1026,-1.8366,-0.6684},
	{3.3079,-5.5096,0.4494},
	{3.36,-5.5965,0.609},
	{3.177,-5.2916,-1.6157},
	{1.9093,-3.1802,-0.8789},
	{3.2878,-5.4761,0.8977},
	{1.9143,-3.1884,-0.7905},
	{3.2365,-5.3907,1.033},
	{2.0426,-3.4021,-0.7476},
	{3.2262,-5.3736,1.1809},
	{1.0996,-1.8439,-1.2732},
	{1.9782,-3.3171,-0.6345},
	{1.1387,-1.9094,-1.2491},
	{2.0075,-3.3663,-0.5508},
	{1.051,-1.7624,-1.0911},
	{2.0003,-3.3542,-0.4567},
	{1.114,-1.8681,-1.0925},
	{2.9273,-4.9086,-0.5332},
	{1.2768,-2.141,-1.18},
	{1.6841,-2.8239,-0.2299},
	{1.342,-2.2503,-1.1665},
	{1.9028,-3.1907,-0.0863},
	{1.2844,-2.1537,-0.9792},
	{1.0964,-1.8385,-0.7791},
	{2.7733,-4.6504,0.1257},
	{2.1011,-3.5232,-1.3861},
	{2.9532,-4.952,0.2689},
	{2.1269,-3.5665,-1.2958},
	{3.1914,-5.3516,0.5813},
	{3.1712,-5.3176,-1.6208},
	{3.1236,-5.2378,0.7132},
	{1.9368,-3.2477,-0.896},
	{2.8868,-4.8407,-1.198},
	{3.1821,-5.3359,1.0207},
	{2.0909,-3.5061,-0.7691},
	{1.0945,-1.8469,-1.2732},
	{1.9921,-3.3617,-0.642},
	{1.1867,-2.0025,-1.3079},
	{3.4379,-5.8016,-0.9478},
	{1.0479,-1.7683,-1.0929},
	{1.9909,-3.3598,-0.4567},
	{1.1553,-1.9496,-1.1383},
	{2.9806,-5.0298,-0.5455},
	{1.3298,-2.2441,-1.2347},
	{1.6833,-2.8406,-0.2309},
	{1.3422,-2.265,-1.1722},
	{3.2724,-5.5223,-0.2993},
	{1.4056,-2.372,-1.1516},
	{4.8499,-8.1844,-0.2209},
	{1.285,-2.1685,-0.9843},
	{3.0955,-5.2237,0},
	{1.0884,-1.8367,-0.7771},
	{2.9366,-4.9557,0.1337},
	{1.0925,-1.8436,-0.7241},
	{2.8915,-4.8795,0.2645},
	{3.1144,-5.2556,0.4272},
	{2.0454,-3.4518,-1.1505},
	{3.1521,-5.3193,0.5769},
	{1.8573,-3.1343,-0.9537},
	{3.0796,-5.1969,0.7064},
	{1.9049,-3.2145,-0.8853},
	{3.1047,-5.2393,0.8559},
	{2.066,-3.4865,-0.7636},
	{2.8085,-4.7394,1.038},
	{1.121,-1.9032,-1.3099},
	{1.9622,-3.3312,-0.6352},
	{1.1841,-2.0102,-1.3108},
	{1.0459,-1.7756,-1.0957},
	{1.1928,-2.025,-1.1805},
	{3.03,-5.144,-0.557},
	{1.2955,-2.1993,-1.2082},
	{1.6617,-2.821,-0.2289},
	{1.2927,-2.1945,-1.134},
	{1.3713,-2.3279,-1.1285},
	{1.3417,-2.2778,-1.0323},
	{3.0665,-5.206,0},
	{1.0864,-1.8444,-0.7791},
	{3.0495,-5.177,0.1395},
	{1.0915,-1.853,-0.7267},
	{2.8898,-4.906,0.2655},
	{2.0892,-3.5467,-1.2844},
	{3.1229,-5.3016,0.4303},
	{3.1352,-5.3224,0.5763},
	{1.8925,-3.2128,-0.8835},
	{3.1091,-5.2782,0.8609},
	{2.9916,-5.0787,-1.2529},
	{2.8888,-4.9041,0.9351},
	{2.0709,-3.5156,-0.7688},
	{2.825,-4.7959,1.0487},
	{1.995,-3.4127,-0.6495},
	{1.2443,-2.1285,-1.3853},
	{3.3474,-5.7262,-0.9322},
	{1.0365,-1.773,-1.092},
	{1.2159,-2.0798,-1.2101},
	{1.9929,-3.4091,-0.3684},
	{1.2754,-2.1817,-1.1962},
	{1.9242,-3.2915,-0.2666},
	{1.2107,-2.071,-1.0681},
	{3.2123,-5.495,-0.2968},
	{1.3375,-2.2879,-1.1069},
	{1.3031,-2.2292,-1.0083},
	{3.0432,-5.2057,0},
	{1.092,-1.868,-0.7311},
	{2.9149,-4.9862,0.2693},
	{2.0369,-3.4844,-1.2594},
	{3.0863,-5.2795,0.5705},
	{1.8308,-3.1319,-0.9497},
	{3.0848,-5.2768,0.7148},
	{1.8759,-3.209,-0.8807},
	{3.0646,-5.2423,0.8534},
	{3.3598,-5.7473,-1.415},
	{2.8257,-4.8336,0.9199},
	{1.9818,-3.3901,-0.7399},
	{3.0283,-5.1802,1.1305},
	{1.1192,-1.9261,-1.3211},
	{2.0049,-3.4503,-0.6556},
	{1.265,-2.177,-1.4147},
	{1.0336,-1.7788,-1.0939},
	{3.1238,-5.3759,-0.7271},
	{1.1808,-2.032,-1.1805},
	{2.9975,-5.1584,-0.5566},
	{1.2443,-2.1413,-1.1723},
	{1.1989,-2.0632,-1.0624},
	{1.886,-3.2457,-0.1751},
	{1.3333,-2.2945,-1.1085},
	{3.6365,-6.2582,-0.168},
	{3.6475,-6.2772,0},
	{1.4173,-2.4391,-1.0267},
	{1.0862,-1.8692,-0.7305},
	{2.8898,-4.9731,0.2682},
	{3.1445,-5.4114,0.4377},
	{2.0274,-3.4891,-1.1571},
	{3.1715,-5.458,0.5889},
	{3.2436,-5.582,0.755},
	{1.8538,-3.1903,-0.8743},
	{3.1732,-5.4609,0.8876},
	{1.9441,-3.3457,-0.8225},
	{2.8973,-4.986,0.9474},
	{1.9729,-3.3953,-0.7399},
	{2.8468,-4.8992,1.0676},
	{1.0657,-1.8458,-1.264},
	{1.9489,-3.3755,-0.6404},
	{1.2484,-2.1624,-1.4029},
	{2.1578,-3.7374,-0.6065},
	{1.0481,-1.8153,-1.1145},
	{3.075,-5.3261,-0.7192},
	{1.1662,-2.0198,-1.1715},
	{1.2681,-2.1964,-1.2005},
	{1.639,-2.8388,-0.2292},
	{1.1821,-2.0475,-1.0526},
	{1.875,-3.2475,-0.1749},
	{1.2623,-2.1864,-1.0545},
	{1.8095,-3.1342,-0.084},
	{1.1597,-2.0087,-0.9057},
	{3.61,-6.2527,0},
	{1.3785,-2.3877,-1.0035},
	{3.0212,-5.2328,0.1403},
	{1.0961,-1.8985,-0.7408},
	{2.8739,-4.9777,0.268},
	{1.3995,-2.4239,-0.8734},
	{3.0635,-5.3062,0.4284},
	{1.9754,-3.4215,-1.1329},
	{1.9977,-3.4601,-1.0459},
	{2.9926,-5.1833,0.6999},
	{1.8527,-3.209,-0.878},
	{3.3105,-5.7339,0.9305},
	{1.8898,-3.2732,-0.8034},
	{2.8468,-4.9309,0.9354},
	{1.9585,-3.3923,-0.738},
	{2.8115,-4.8697,1.0594},
	{1.0462,-1.8253,-1.2477},
	{1.9127,-3.3371,-0.6319},
	{1.1315,-1.9741,-1.2785},
	{2.1342,-3.7235,-0.6032},
	{1.0696,-1.8661,-1.1436},
	{2.9467,-5.141,-0.693},
	{1.2167,-2.1227,-1.229},
	{1.9706,-3.4381,-0.3697},
	{1.2639,-2.2051,-1.2031},
	{1.9753,-3.4463,-0.2778},
	{1.183,-2.0639,-1.0591},
	{1.832,-3.1962,-0.1718},
	{1.1582,-2.0206,-0.9728},
	{1.7997,-3.1398,-0.084},
	{1.1108,-1.938,-0.8722},
	{3.5724,-6.2328,0},
	{1.3635,-2.379,-0.998},
	{2.8662,-5.0006,0.2688},
	{2.9268,-5.1063,0.4116},
	{1.9818,-3.4577,-1.1428},
	{3.4639,-6.0434,0.6499},
	{1.957,-3.4143,-1.0302},
	{2.9328,-5.1169,0.6897},
	{1.8252,-3.1844,-0.8697},
	{3.3052,-5.7666,0.9341},
	{1.861,-3.2469,-0.7955},
	{2.797,-4.8799,0.9241},
	{1.9625,-3.424,-0.7436},
	{2.8617,-4.9928,1.0843},
	{1.0326,-1.8133,-1.2375},
	{1.9298,-3.3888,-0.6407},
	{1.0915,-1.9167,-1.2393},
	{2.1023,-3.6916,-0.5971},
	{1.0801,-1.8967,-1.1605},
	{2.1194,-3.7217,-0.5008},
	{1.2921,-2.269,-1.3115},
	{2.975,-5.2242,-0.5609},
	{1.2622,-2.2165,-1.2073},
	{1.6073,-2.8225,-0.2271},
	{1.2757,-2.2402,-1.1478},
	{1.7696,-3.1076,-0.1668},
	{1.1717,-2.0575,-0.989},
	{1.7909,-3.1449,-0.084},
	{1.1257,-1.9767,-0.8883},
	{3.5085,-6.161,0},
	{1.3355,-2.3452,-0.9823},
	{1.0642,-1.8688,-0.7267},
	{2.9115,-5.1127,0.2744},
	{1.3917,-2.4438,-0.8775},
	{2.9806,-5.2341,0.4212},
	{1.9874,-3.4899,-1.1516},
	{3.0075,-5.2813,0.567},
	{3.1816,-5.587,-1.6831},
	{2.9303,-5.1458,0.6925},
	{1.7739,-3.1151,-0.8494},
	{3.2323,-5.676,0.918},
	{1.9158,-3.3643,-0.8229},
	{2.7912,-4.9014,0.9267},
	{1.9238,-3.3782,-0.7325},
	{2.7845,-4.8897,1.0602},
	{1.0224,-1.8071,-1.2314},
	{1.9534,-3.4525,-0.6517},
	{1.0818,-1.9121,-1.2344},
	{2.0978,-3.7078,-0.5987},
	{1.0896,-1.9258,-1.1765},
	{2.916,-5.1539,-0.6925},
	{1.211,-2.1404,-1.2352},
	{3.1173,-5.5098,-0.5906},
	{1.2605,-2.2279,-1.2116},
	{1.5965,-2.8218,-0.2267},
	{1.6862,-2.9803,-0.1597},
	{1.2795,-2.2616,-1.0854},
	{1.7732,-3.1342,-0.0836},
	{1.3151,-2.3244,-0.972},
	{3.5425,-6.2614,0.167},
	{1.0608,-1.875,-0.7279},
	{2.8805,-5.0913,0.2728},
	{3.0016,-5.3053,0.5687},
	{2.9013,-5.128,0.689},
	{1.7432,-3.081,-0.8388},
	{3.1852,-5.6298,0.9091},
	{1.8583,-3.2845,-0.8021},
	{2.9291,-5.1771,0.9773},
	{1.9105,-3.3768,-0.731},
	{1.0171,-1.8102,-1.2314},
	{1.9421,-3.4566,-0.6514},
	{1.1069,-1.9701,-1.2697},
	{2.0742,-3.6916,-0.5951},
	{1.0934,-1.946,-1.1868},
	{2.9026,-5.166,-0.693},
	{1.195,-2.1268,-1.2254},
	{1.5266,-2.717,-0.2908},
	{1.245,-2.2158,-1.2031},
	{1.5901,-2.83,-0.227},
	{1.3049,-2.3224,-1.186},
	{1.6206,-2.8843,-0.1543},
	{1.2665,-2.2541,-1.08},
	{1.76,-3.1325,-0.0834},
	{1.3041,-2.321,-1.0396},
	{3.4651,-6.1672,0},
	{1.2069,-2.148,-0.8968},
	{2.0382,-3.6275,0.0966},
	{1.0506,-1.8699,-0.7247},
	{2.8722,-5.112,0.2734},
	{1.7526,-3.1192,-1.1164},
	{2.9358,-5.2251,0.4191},
	{2.7551,-4.9035,-1.4724},
	{2.9016,-5.1643,0.6927},
	{1.7302,-3.0794,-0.8369},
	{3.0414,-5.4131,0.8726},
	{1.8111,-3.2234,-0.7859},
	{2.9253,-5.2064,0.9812},
	{1.9014,-3.3841,-0.7314},
	{2.7496,-4.8937,1.0576}};    
    
    RayDirnServer ray_dirn_server;

    std::vector<double> ray_yaw_vec, ray_pitch_vec;
    std::tie(ray_yaw_vec, ray_pitch_vec) = ray_dirn_server.getRayYawPitchVec(ray_origin, packet_pts);
    dispVec(ray_yaw_vec);
    dispVec(ray_pitch_vec);

    ray_dirn_server.getPatternYawVec(ray_yaw_vec);

    double elapsed_time = (clock()-start_time)/CLOCKS_PER_SEC;
    std::cout << "elapsed time: " << elapsed_time << "s." << std::endl;
	
    return(1);
}

other logic from ref: don't include points too close, speed of vehicle etc.

everywhere in my code, the pose convention is : yzxrpy, and the yaw has to be -ve
for using in a transformation

--------------------------------------------------

mat:

analyze taylor data:

brigthened image by contrast. how it works is a mystery to me.

scatter3 can handle about a max of 1e5 points smoothly. 

vane sim:

there is a simple way of vizing the segments from each pcd, fill in the holes of
one pcd with the segmentation from another

manual segmentation, can use coarse hierarchical clustering output from matlab.

grep todos in code

params:
viz:
segment length in plot
levels in plotting ellipse

sortintersectionflag used by mesh and ellipse, might want to change comments

selection of scan ids to process

metric of comparing point clouds

what is the default value when nothing is returned from laser?
laser scanning pattern

names getting confusing 
scanPts, for the driveby
trainPts, makes sense

maybe instead of making cell blocks inside a long function, write subfunctions.

actually, perm value is opacity.

70% of ellipsoids scan rays hit
75% of tri scan rays hit

segment:

remember that values of params depend on point cloud density, e.g. max dist to
nbrs or min nbrs

segmentation works with subsampled dataset. so will have to transfer labels to
points in full dataset, just do nearest neighbors

figs:
saving fig with 16000 3d points seems like reasonable capacity, takes about 25s. 
remember that each ellipsoid is specified with a number of points. scale number of points based on size?

--------------------------------------------------

taylor data:

camera ids: clock-hour orientation, 12 is straight ahead

79: 10
80: 12
81: 4
82: 2
83: 8
84: 6

num frames:
38384, 38384, 6242, 6242, 6224, 7989

num velodyne packets: 4624457

--------------------------------------------------

cpp:

vtk:
axes ticks
subfigures
labels
viewpoints
saving figures

why does viz ellipsoids need one at the origin?

just like you have functions written in matlab for matlab processing, you need
to write emacs lisp to do simple operations in emacs

cpp:
hierarchical clustering
pdist2
flann, nearest neighbors
vector to eigen, vector to flann, better than copying
many class members are public

flann has hierarchical clustering also
check perm logic
matlab pdist2 very fast compared to for looping cpp
there is a smarter way to line walk instead of checking intersection with all triangles

alglib rbf fit also very slow. for rim stretch ground train, with 1e6 pts, takes
729 s with rbfdist = 1, level = 1, smoothness = 1e-3 10s with radius = 0.1m.

how does matlab manage griddata fast? probably does it only for query points

maybe sorted intersection flag should be in a modeling utils

write triangles also shouldn't be attached to a class?

perm, var for meshes debug

sim with alglib ellipsoids in matlab to debug

maybe flann nn should be a class so nchecks and nkdtrees can be set?

flann nn different from pdist2. because inexact?

code comments

metric for comparing point clouds

params:
block logic:
dt for nodes

flann
alglib
vtk
cgal

boost scope cpu timer
valgrind
ellipsoids kd tree

for each modeling, do a cleanup: remove pts that are far from any neighbors

segmentation optim: debug the nn calculation, smoothing, look at block 1 in
matlab to see what is going in, plot the spherical variation directly.
maybe block 1 doesn't have enough point density.

in cpp, one function after another, only operating on member data, who knows
what comes when?

abstract modeler class

vtk bulbs when giving it only sim points, why?

so there was an error in the rng in eigenmvn. watch out, there could be similar
errors in the rest of the code

can modulate transparencies with permeabilities

flann includes pt as its own nearest nbr, check code for this!

one of the sources of error is that the imu posn is not the laser posn!

how to save objects? boost serialize

saw error due to playing around too much with private variables. m_n_clusters
error happened. what is a good way to avoid that error.

change sim pts logic: always return hit flag.

there can be other functions which deal with filtering out non-hit points.

i want to throw away visualizer.cpp and pcl includes in cmakelists, but for
unidentified reason, just commenting out visualizer breaks compilation in ways
related to vtk and boost.

--------------------------------------------------

catkin ws:

* how to cleanly include liblidar_sim? with all its dependent libraries?

* for boost regex, had to manually link .a library

--------------------------------------------------

while installing cloudcompare:

* installed qt5.7 via instructions from 
  https://wiki.qt.io/Install_Qt_5_on_Ubuntu
eventually files in ~ instead of /usr/local

* git cloned cloudcompare and followed instructions on BUILD.md

* used cmake gui to configure and generate. make of cloudcompare was not finding
  qt5.7

* changed qt default
http://askubuntu.com/questions/435564/qt5-installation-and-path-configuration

* this made it seem like 5.7 was being used, but compile still failed.

* in cmake gui, changed the qt root path + qt cmake refs to the directories in ~
which worked

--------------------------------------------------

ros install:

* installing indigo. when installing desktop-full, had problems with installing
  the simulators. a gazebo bug is noted on the website. i deleted all gazebo-7
  filed i had, yet didn't go away. installing only desktop for now, since i
  mainly need rviz.

--------------------------------------------------

rviz:

source does not see package
copy of launch does not launch
why is launch exec still open
viz triangles
keep reading parameter server
write to param server using py script

